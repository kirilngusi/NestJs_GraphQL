datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  // previewFeatures = []
}

generator dbml {
  provider = "prisma-dbml-generator"
}

model User {
  id        String   @id @default(cuid())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  fullName     String
  email        String  @unique
  phone_number String  @unique
  password     String
  Order        Order[]
  deleted      Boolean @default(false)
  role         Role
}

model Order {
  id            String   @id @default(cuid())
  createdAt    DateTime @default(now())
  name         String
  email        String
  phone_number String
  note         String
  address      String
  status       Boolean  @default(false)
  total_money  Float

  user          User?           @relation(fields: [userId], references: [id])
  userId        String
  Order_Details Order_Details[]
}

model Order_Details {
  id            String   @id @default(cuid())
  Product_Id  Product? @relation(fields: [productId], references: [id])
  Order_Id    Order?   @relation(fields: [orderId], references: [id])
  productId   String?
  orderId     String?
  price       Float
  num         Int
  total_money Float
}

model Product {
  id            String   @id @default(cuid())
  category_Id          Category? @relation(fields: [category_Id_Relation], references: [id])
  category_Id_Relation String
  name                 String
  price                Float
  priceSale            Float
  images               Images[]
  description          String
  Sold                 Int
  In_Stock             Int
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt

  deleted       Boolean         @default(false)
  Order_Details Order_Details[]
  Product_Entry Product_Entry[]
}

model Images {
  id            String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Product   Product? @relation(fields: [productId], references: [id])
  productId String?
}

model Category {
  id            String   @id @default(cuid())

  name String @unique

  product Product[]
}

model Product_Entry {
      id            String   @id @default(cuid())
      additional_price Float
      capacity Capacity[]
      colour Colour[]
      Product   Product? @relation(fields: [productId], references: [id])
      productId String?
}

model Capacity {
      id             String   @id @default(cuid())
      capacity       String?
      productEntry   Product_Entry? @relation(fields: [productEntryId], references: [id])
      productEntryId String
}

model Colour {
      id             String   @id @default(cuid())
      colour         String?
      productEntry   Product_Entry? @relation(fields: [productEntryId], references: [id])
      productEntryId String
}

enum Role {
  ADMIN
  USER
}
